version: '1.0.{build}'

image: Visual Studio 2017
shallow_clone: true

# only commits to master trigger appveyor
branches:
  only:
  - master

environment:
  matrix:
    - PYTHON: "C:\\Python36"
      PYTHON_VERSION: "3.6.3"
      PYTHON_ARCH: "32"
      APPVEYOR: "true"

# rgd chcp 65001: needed for cbor and pyyaml, because of this
# https://github.com/pypa/pip/issues/4251
init:
  - cmd: git config --global core.autocrlf true
  - ps: chcp 65001
  - "ECHO %PYTHON% %PYTHON_VERSION% %PYTHON_ARCH%"

# install any build/dev requirements
install:
  - "SET PATH=%PYTHON%;%PYTHON%\\Scripts;%PATH%"
  - python -m pip install -U pip
  - pip install -r requirements-dev.txt

# build/install the package itself
build_script:
  # make appveyor build number available as "cbsh._version.__build__"
  - ps: (Get-Content .\\cbsh\\_version.py).replace('00000', '{build}') | Set-Content .\\cbsh\\_version.py

  # make appveyor build environment available as ."buildenv.json" in the package
  - python -c "import os, json; fd = open('cbsh\\.buildenv.json', 'w'); json.dump({key: os.environ[key] for key in os.environ if key.startswith('SQB')}, fd); fd.close()"

  # install cbsh (which includes the sphinxcontrib.xbr namespace package)
  - pip install .

  # patch pip because of issue with namespace packages. we need to patch this file:
  #   C:\\Python36\\lib\\site-packages\\pkg_resources\\__init__.py
  # and replace
  #   orig_path.sort(key=position_in_sys_path)
  # with
  #   orig_path = sorted(orig_path, key=position_in_sys_path)
  - ps: (Get-Content C:\\Python36\\lib\\site-packages\\pkg_resources\\__init__.py).replace('orig_path.sort(key=position_in_sys_path)', 'orig_path = sorted(orig_path, key=position_in_sys_path)') | Set-Content C:\\Python36\\lib\\site-packages\\pkg_resources\\__init__.py

# run unit tests
test_script:
  - echo "FIXME: insert unit tests"

# if tests are successful ...
after_test:
  # create Python binary packages
  - python setup.py sdist
  - python setup.py bdist_wheel --universal
  - python setup.py bdist_wheel
  - python setup.py bdist_wininst
  - python setup.py bdist_msi
  - ps: ls dist

  # create one-file executable using pyinstaller
  #
  # note: the warning messages during the build that refer to "api-ms-win-crt-*" as in
  # WARNING: lib not found: api-ms-win-crt-runtime-l1-1-0.dll dependency of c:\python36\python.exe
  # appear to be harmless - the generated EXE seems to be fine (roughly 30MB)
  - pyinstaller --onefile --clean --name cbsh --hidden-import "cookiecutter.extensions" --hidden-import "jinja2_time" --hidden-import "sphinx.util.compat" --hidden-import "sphinxcontrib.xbr" cbsh/cli.py
  - ps: ls dist
  - cmd: dist\cbsh.exe version

  # we move the file, so that when uploading, the "dist" path part is gone (maybe there
  # is a more elegant way to configure that in the "deploy" step - couldn't find one)
  - ps: move dist\cbsh.exe .

# define the stuff we actually upload (a single file)
#
artifacts:
  - path: cbsh.exe
    name: Crossbar.io Shell

# this step uploads cbsh.exe to bucket "download.crossbario.com", available at URL
# https://s3.eu-central-1.amazonaws.com/download.crossbario.com/cbsh/windows/dist/cbsh.exe
#
deploy:
  provider: S3
  bucket: download.crossbario.com
  region: eu-central-1
  unzip: false
  set_public: true
  folder: cbsh/windows
  artifact: Crossbar.io Shell

  # to generate the encrypted key material for S3 IAM access below, go to:
  # https://ci.appveyor.com/tools/encrypt
  access_key_id:
    secure: O8zpApNyYa9l577lVw5YzaYALUtZhY06CHkRQZQxOm8=
  secret_access_key:
    secure: 12lctYLle9L+rP2ZohkSKXa4h9IiI0b8YwRlNTtb02h0J8FoQGjVI9scem3GRpCG
